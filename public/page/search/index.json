[{"content":"Intro This year\u0026rsquo;s advent of code was interesting. I decided this was the year I would start learning Haskell, since I had gotten my hands on the \u0026ldquo;Category theory for Programmers\u0026rdquo; book by Bartosz Milewski. Not withstanding, this year featured an entire week of string parsing and manipulation. Because of this, this year has to be one of the most tedious advent of code years yet.\nI had just gotten my hands on \u0026ldquo;Category Theory for Programmers\u0026rdquo; by Bartosz Milewski. This book is phenomenal! It introduces category theory concepts in a very digestible way. One of the category theory concepts that the book exposes is function composition. One way to compose functions is using function combinators, for example the famous combinator birds. These combinator birds express different ways of composing functions using a single function. Which lets you build your own custom complex algorithm by merely picking and choosing which functions you want to use.\nDay 1 Day one started with string parsing. They give you an input that has both number words and digits and you have to pick the first digit that appears from both the right and the first from the left.\nMy solution to the first part was the following:\nimport Data.List import Data.Char toInt = read :: String -\u0026gt; Int starling = \\a b c d -\u0026gt; a (b d) (c d) toList x1 x2 = [x1, x2] getNum = starling toList head last . filter isDigit solve1 = sum . map (toInt . getNum) main = interact $ show . solve1 . words This solution was somewhat concise. You have the starling combinator, which admittedly is not descriptive and a very bad name, which you use to combine the head and last of the digits in the input.\nThe second part was not as simple. The second part asks that you parse each word and find what the first and what the last possibly digit or word number is.\nfor example: twoeight3 would be \u0026ldquo;283\u0026rdquo; import Data.List import Data.Char toInt = read :: String -\u0026gt; Int starling = \\a b c d -\u0026gt; a (b d) (c d) number \u0026#34;one\u0026#34; = \u0026#34;1\u0026#34; number \u0026#34;two\u0026#34; = \u0026#34;2\u0026#34; number \u0026#34;three\u0026#34; = \u0026#34;3\u0026#34; number \u0026#34;four\u0026#34; = \u0026#34;4\u0026#34; number \u0026#34;five\u0026#34; = \u0026#34;5\u0026#34; number \u0026#34;six\u0026#34; = \u0026#34;6\u0026#34; number \u0026#34;seven\u0026#34; = \u0026#34;7\u0026#34; number \u0026#34;eight\u0026#34; = \u0026#34;8\u0026#34; number \u0026#34;nine\u0026#34; = \u0026#34;9\u0026#34; number \u0026#34;1\u0026#34; = \u0026#34;1\u0026#34; number \u0026#34;2\u0026#34; = \u0026#34;2\u0026#34; number \u0026#34;3\u0026#34; = \u0026#34;3\u0026#34; number \u0026#34;4\u0026#34; = \u0026#34;4\u0026#34; number \u0026#34;5\u0026#34; = \u0026#34;5\u0026#34; number \u0026#34;6\u0026#34; = \u0026#34;6\u0026#34; number \u0026#34;7\u0026#34; = \u0026#34;7\u0026#34; number \u0026#34;8\u0026#34; = \u0026#34;8\u0026#34; number \u0026#34;9\u0026#34; = \u0026#34;9\u0026#34; number _ = \u0026#34;\u0026#34; splitAll [] = [] splitAll (x:xs) = [x] : splitAll xs prefixes = scanl1 (++) . splitAll suffixes = scanr1 (++) . splitAll allSubstrs = foldl\u0026#39; (++) [\u0026#34;\u0026#34;] . map (suffixes) . prefixes getNum = starling (++) head last . filter (/= \u0026#34;\u0026#34;) . map number . allSubstrs solve2 = sum . map (toInt . getNum) main = interact $ show . solve2 . words That\u0026rsquo;s a lot to digest.\n","date":"2024-01-01T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/advent-of-code/","title":"Advent of Code 2023"},{"content":"The UPR-RP Asian Culture Festival is happening in 2 weeks from now. All of us are finishing our preparations and starting our last finishing practices for it. One thing I noticed was that most of the pictures from last year were buried in an instagram blogpost from last year. Which is somewhat unfortunate since lots of beautiful pictures and moments were created from that time.\nWhat a better way to revive those memories and instill excitement in others than with an online gallery of the Festival.\nLinks: Asian Culture Festival ","date":"2023-10-22T10:35:14-04:00","image":"http://localhost:1313/cache-invalidation/posts/asian-culture-festival/cover_hu6db98c43cc8d2773740f3b41803d5774_2458064_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/cache-invalidation/posts/asian-culture-festival/","title":"Asian Culture Festival Website"},{"content":"After a grueling five hour match our team couldn\u0026rsquo;t solve a single exercise. We were very out of it at the end and just couldn\u0026rsquo;t find a way to solve any of the exercises. Even though the exercises were pretty hard some of our solutions were indeed correct but couldn\u0026rsquo;t beat the time limit they gave us for those exercises.\nFor example one of the exercises was to find out all the numbers between 2 and N that fit the following description: For x in [2, N], N base x is a palindrome. The complicated part of this problem being the fact that the largest N they give you is 2^15 and your time limit is 1 second.\nChanging a decimal number to a different base will always take an O(log n) amount of steps; checking if it\u0026rsquo;s a palindrome will take O(n/2) steps max; doing that for every number in [2, N] is O(n log(n)). Note that an average computer can only do 10^8 calculations per second, but our largest number is 2^15 which means that anything equal or slower in complexity than a linear solution would be too slow.\nDuring the competition several things we noticed were that N in [3, N) will always have at least 1 palindrome in the base N-1. That is because you can always express N as (1 * (N-1) + 1). The next palindrome number would be 22 but wwe couldn\u0026rsquo;t notice why this palindrome would only sometimes appear.\nFor the sake of explanation I will refer to palindrome-pairs as a palindrome made of 2 digits. After the competition concluded, on the ride back, our professor had mentioned that you will always have palindrome-pairs made of the factors of that number strictly less than that number\u0026rsquo;s square root. Which makes sense for our first example since every number has the number 1 as a factor. Furthermore, the number 36, whose factors are: { 1, 2, 3, 4, 6, 9, 18, 36 } can be expressed as:\n11 in base 35 22 in base 17 33 in base 11 44 in base 8 121 in base 6 awwww It was almost working. I say almost because 121 IS a palindrome but it\u0026rsquo;s also not a palindrome-pair. Unfortunately we couldn\u0026rsquo;t come up with any better algorithm for this and ended up submitting this solution twice and getting TLE\u0026rsquo;d.\n","date":"2023-10-21T22:00:00-04:00","image":"http://localhost:1313/cache-invalidation/posts/icpc-regionals-l/cover_hua4857e59fa600dc69692a531a6e034b4_72020_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/cache-invalidation/posts/icpc-regionals-l/","title":"We Lost the ICPC Regionals"},{"content":"Code templates Here are several code templates that will probably have to be typed out for every exercise.\nC++ #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define fastIO ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); #define all(x) x.begin(), x.end() #define int int64_t typedef size_t sz; typedef pair\u0026lt;int, int\u0026gt; ii; typedef vector\u0026lt;int\u0026gt; vi; typedef vector\u0026lt;pair\u0026lt;int, int\u0026gt;\u0026gt; vii; typedef vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; vvi; int32_t main() { fastIO; /* solution */ return 0; } Formulas These code templates are based off the previous C++ code header.\nMatrices Matrices are very useful for recurrence relations.\nLongest common subsequence template\u0026lt;typename T\u0026gt; int lcs(T\u0026amp; seq1, T\u0026amp; seq2) { int n = seq1.size(); int m = seq2.size(); vi prev(m + 1, 0), cur(m + 1, 0); for (int i = 1; i \u0026lt; n + 1; i++) { for (int j = 1; j \u0026lt; m + 1; j++) { if (seq1[i - 1] == seq2[j - 1]) cur[j] = 1 + prev[j - 1]; else cur[j] = max(cur[j - 1], prev[j]); } prev = cur; } return cur[m]; } Longest Increasing Subsequence template\u0026lt;typename T\u0026gt; int lis(vi arr) { int n = vi.size(); vi ans; ans.push_back(nums[0]); for (int i = 1; i \u0026lt; n; i++) { if (nims[i] \u0026gt; ans.back()) ans.push_back(nums[i]); else { int low = lower_bound(all(ans), nums[i]) - ans.begin(); ans[low] = nums[i]; } } return ans.size(); } ","date":"2023-10-08T21:25:27-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/icpc-formulas/","title":"ICPC Formulas and Shortcuts"},{"content":"Following last week\u0026rsquo;s ICPC contest I spent all week trying to make a C++ matrix class template we could use for the commpetitions.\nThe problem was a very basic fibonacci-like recurrence relation of the form: f(n) = f(n-1) + f(n-2) + 2 * n * n + 5\nThe main issue with this was the fact that the largest input size was 10^18. Computers on average (mildly lower than average nowadays) can do around 10^8 cycles per second. Which left us with an estimate ~10^10 seconds left to compute the largest fibonacci number\u0026hellip; Though that may be impossible there is an algorithm to compute any recurrence relation in big-O log time. I will not go into detail on how to do that (though I might just make another blog post about it), here is a link to an amazing article on how to create a fibonacci matrix based on any recurrence relation.\nCode:\nstruct Matrix { Matrix(sz r, sz c) : data(vi(r * c, 0)), cols(c), rows(r) { } int\u0026amp; operator[](sz i) { return data[i]; } int\u0026amp; operator()(sz r, sz c) { return data[r * cols + c]; } int operator()(sz r, sz c) const { return data[r * cols + c]; } vi get_row(sz r) const { auto ret = vi(cols, 0); sz i = 0; for (auto\u0026amp; e : ret) { e = data[rows * r + i]; i++; } return ret; } vi get_col(sz c) const { auto ret = vi(rows, 0); sz i = 0; for (auto\u0026amp; e : ret) { e = data[cols * i + c]; i++; } return ret; } void print() const { for (sz i = 0; i \u0026lt; rows; i++) { for (sz j = 0; j \u0026lt; cols; j++) cout \u0026lt;\u0026lt; (*this)(i, j) \u0026lt;\u0026lt; \u0026#34; \u0026#34;; cout \u0026lt;\u0026lt; endl; } } Matrix operator*(const Matrix\u0026amp; rhs) const { auto out = Matrix(rhs.rows, cols); for (sz i = 0; i \u0026lt; cols; i++) { auto sel_row = get_row(i); for (sz j = 0; j \u0026lt; rhs.rows; j++) { auto sel_col = rhs.get_col(j); int sum = inner_product(sel_row.begin(), sel_row.end(), sel_col.begin(), 0); out(i, j) = sum; } } return out; } void operator*=(const Matrix\u0026amp; rhs) { for (sz i = 0; i \u0026lt; cols; i++) { auto sel_row = get_row(i); for (sz j = 0; j \u0026lt; rhs.rows; j++) { auto sel_col = rhs.get_col(j); int sum = inner_product(sel_row.begin(), sel_row.end(), sel_col.begin(), 0); (*this)(i, j) = sum; } } } vi data; sz cols; sz rows; }; Links Here is a link to the matrix github repo: ","date":"2023-10-04T10:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/cpp-matrix/","title":"Matrix C++ Container"},{"content":"New website In the past I had tried making several different websites to organize different singular projects but I quickly realized that was way too much work for whatever those projects were. Most of my projects aren\u0026rsquo;t finished because I lose the motivation to do so. Nevertheless, my motivation to start projects is enough to get them to a fully working state.\nI made this so I could organize all my different projects in a single place in an easy way. Most of my projects were distributed around my github profile into different repos.\nHere\u0026rsquo;s to seeing if any new projects will spring up because of this.\nLinks Link to GitHub repo: https://github.com/Sunglas/cache-invalidation ","date":"2023-09-28T10:31:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/cache-invalidation/","title":"New Website cache-invalidation"},{"content":"Classes Graphic Purpose: Hold all the required information needed to display a simple graphic on the screen. Public Methods: Value returning: [[nodiscard]] auto get_win() const -\u0026gt; WINDOW * [[nodiscard]] auto get_text() const -\u0026gt; std::vector\u0026lt;const char *\u0026gt; [[nodiscard]] auto get_attributes() const -\u0026gt; std::vector\u0026lt;unsigned int\u0026gt; [[nodiscard]] auto get_coords() const -\u0026gt; std::pair\u0026lt;size_t, size_t\u0026gt; Void: auto show() const -\u0026gt; void auto set_win(WINDOW *) -\u0026gt; void auto set_text(std::span\u0026lt;const char *\u0026gt;) -\u0026gt; void auto set_text(std::initializer_list\u0026lt;unsigned int\u0026gt;) -\u0026gt; void Ship : Graphic Purpose: Hold extra information needed to display an entire ship entity. Public Methods: Value returning: Void: Player Purpose: Hold and manage information pertaining to a specific player. Public Methods: Value returning: Void: Assets Logo:\n_ __ |_) _._|__|_| _ (_ |_ o._ |_)(_| |_ |_|(/___)| |||_) | Hasbro instructions\nSample grid:\no o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Ships Carrier: 5 [XXXXXXX] o o o o M o o o o o o o o o X o o o o o o o o o X o o o o o o o o o X o o o o o o o o o W o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Battleship: 4 \u0026lt;\u0026amp;\u0026amp;\u0026amp;\u0026amp;\u0026amp;\u0026gt; o o o o o A o o o o o o o o o \u0026amp; o o o o o o o o o \u0026amp; o o o o o o o o o V o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Destroyer: 3 [===\u0026gt; o o o o o o M o o o o o o o o o H o o o o o o o o o V o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Submarine: 2 (@) o o o o o o o n o o o o o o o o o U o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Patrol Boat: 2 {:} o o o o o o o ^ o o o o o o o o o V o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o Links link to GitHub repo: https://github.com/Sunglas/BattleShip ","date":"2023-08-12T16:38:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/battleship/","title":"BattleShip"},{"content":"Mandelbrot fractal research repo\nWhy? I\u0026rsquo;ve refactored this piece of code like 6140275936420759697 times so here\u0026rsquo;s the collection of all those efforts.\nHow? The C directory has everything you need for a 100% portable version to generate on whatever piece of hardware you want. nobuild courtesy of tsoding at:\nnobuild The c++ directory has three sub directories.\nmandelbrot/ has my first c port from:\nThe Coding Train mandelbrot-gamma/ using openmp for multithreading; a very optimized version of that same code\nmandelbrot-lambda/ is in the works but it\u0026rsquo;s supposed to be the same as mandelbrot-gamma but using lambdas\nHere it is: TODO(): - histogram - fancy colors - specify spot to generate in - maybe animate ?? Links * Link to github repo: https://github.com/Sunglas/mandelbrot ","date":"2023-05-05T11:08:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/mandelbrot/","title":"Mandelbrot Research Repo"},{"content":" Colors I used pywal to generate this colorscheme, feel free to do the same.\npywal GitHub Black: #222F30 Grey: #A59D9C Red: #86999B Green: #86A78F Yellow: #8592A5 Blue: #87B0AF Magenta: #B0A7A9 Cyan: #DCBCB6 White: #EDE1E0 fetch program Provided is a rust crate called fetch with a basic template to make a hard-coded fetch program. (That\u0026rsquo;s the one I used for the screenshots.) The program displays:\nUserName@HostName Distro ~ DistroName Shell ~ ShellName Term ~ Terminal WM ~ WindowManager ▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅ So simply modify the variables in the source file to fit your setup and cargo build --release to get the binary. (Tip: I copied the binary over to ./local/bin/.)\nAssets Firefox startpage eject by Spogelsesmaskinen.\neject Spogelsesmankinen Twitter profile Wallpaper Could not find the original artist for the background but I found this wallhaven post with a pretty high res version saved.\nhttps://whvn.cc/yxqj6l firefox startpage Startpage WARNING: do not apply this without considering the vulnerabilities it opens up.\nSee this CVE I copied most of what\u0026rsquo;s in this: (I added the lil\u0026rsquo; gif at the side and changed some of the website links.)\nhttps://github.com/okitavera/vimstart In order to have this work you will have to let firefox to be able to view file:// from within a locally hosted html file. I\u0026rsquo;m guessing you could get around having to disable these security policies by locally hosting the html but I\u0026rsquo;m not quite there yet\u0026hellip;\nProvided is a user.js inside .mozilla/firefox/default-release with the necessary changes to make. More specifically, these three lines (as documented in mozillazine):\nuser_pref(\u0026#34;capability.policy.policynames\u0026#34;, \u0026#34;localfilelinks\u0026#34;); user_pref(\u0026#34;capability.policy.localfilelinks.sites\u0026#34;, \u0026#34;file://\u0026#34;); user_pref(\u0026#34;capability.policy.localfilelinks.checkloaduri.enabled\u0026#34;, \u0026#34;allAccess\u0026#34;); mozillazine Additionally, if you are running the latest version of firefox (hopefully): Toggle security.fileuri.strict_origin_policy to false in your about:config page.\nOther Firefox css tweaks I copied color_variable_template and autohide_tabstoolbar templates from this incredible firefox css website:\nhttps://mrotherguy.github.io/firefox-csshacks/ The userChrome.css provided under .mozilla/firefox/default-release/chrome already has these css patches applied and should be placed inside the chrome directory that you have to make inside your firefox local directory. Your firefox local directory can be found in about:profiles.\nVim I did not theme much of what\u0026rsquo;s on my vim other than enabling a couple options. Most of it (but basically all of it) comes from the amazing team over at AstroNvim . Additionally, my nvim version is 0.8.0 and was installed through bob-nvim.\nAstroNvim GitHub bob-nvim shell As seen in my screenshot I am using nushell. A new type of shell that deals with data instead of simple text streams. Very interesting and fast out of the box (even on my 2008 hardware). NOTE I have a bunch of aliases at the end of my nushell config file that replace most of the gnu coreutils with rust implementations of each.\nnushell Website UUtils GitHub Sway I am not using the upstream sway. I am using swayfx. A fork of sway that adds corners, shadows and active/inactive dim. That means that the options under the swayfx area in my sway config will most definitely give you errors when launching the upstream sway istead of swayfx sway.\nswayfx GitHub dvorak IMPORTANT My keybinds and input layout in sway are set to a dvorak keyboard. So if you are using a normal qwerty keyboard remember to change the layout back to normal in the sway config and possibly change the sway keybinds around in the keymap config.\nLinks Link to github repo: https://github.com/Sunglas/laptop-dots-wl ","date":"2023-03-31T13:48:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/wl-lp-dots/","title":"Wayland Laptop Dotfiles"},{"content":" rdbm is a rust program for getting and setting a custom ron resource file.\nSimilar to .Xresources, rdbm will create a resources.ron in your ~/.config/ directory. You can then use rdbm to set multiple \u0026ldquo;key-value\u0026rdquo; pairs similar to .Xresources. In this case rdbm aims to replace xrdb.\nron Documentation xrdb Information Documentation Here is a short preview of each subcommand:\nview current resource file rdbm all set a key-value pair rdbm set \u0026#34;color0\u0026#34; \u0026#34;#222F30\u0026#34; get a value rdbm get \u0026#34;color0\u0026#34; rdbm help page rdbm --help rdbm help rdbm set --help Project Goals Remove entries Get/Set multiple values Custom resource.ron path Group key-value pairs (similar to having URxvt*color0 and xterm*color0 in .Xresources) Sort entries in resource file Preserve order of entries in resource file Links Link to github repo: https://github.com/Sunglas/rdbm ","date":"2023-03-31T13:32:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/ron-db/","title":"R. O. N. DataBase Manager"},{"content":"It has been a great fun reading \u0026ldquo;Category Theory for Programmers\u0026rdquo; by Bartosz Milewski and finding great insight into my programming adventures through the eyes of a category theory.\nChallenge #1 ","date":"2023-01-12T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/category-theory/","title":"Category Theory"},{"content":"","date":"2023-01-01T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/cpp-modules/","title":"C++ Modules System w/ clang++"},{"content":"","date":"2023-01-01T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/decimal-floats/","title":"Decimal Floats"},{"content":"","date":"2023-01-01T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/gemini-protocol/","title":"The Gemini Protocol"},{"content":"As I had mentioned in my past blog about the Mandelbrot Research Repo \u0026ldquo;I\u0026rsquo;ve refactored this piece of code like 6140275936420759697 times\u0026hellip;\u0026rdquo;, so I guess that makes it \u0026ldquo;6140275936420759697\u0026rdquo; plus one.\nThis time around I finalized the implementation for a Canvas class that collects all the pixels you want and writes to a file you give it. By making it a class it is now much easier to work on the underlying byte buffer without having to get your hands dirty.\ntemplate \u0026lt;size_t width, size_t height\u0026gt; class Canvas; The only downside to this implementation is the fact that this class will get allocated on the stack so for any render of 1.5k+ pixels in both dimensions ends up overflowing most computer\u0026rsquo;s stacks nowadays. The way to get around this is by declaring the canvas object as a static duration object so that it gets stored into storage and not the actual stack.\nstatic auto canvas = Canvas\u0026lt;2000, 2000\u0026gt;(); One cool thing about this implementation is the way you can use lambdas to modify the pixels isnide the byte buffer. For example, with the new construct(auto op) method you can simply pass a function pointer (though realistically, you would only pass a lambda) and the construct method applies that function to each pixel in the canvas.\nauto mandelbrot = [](std::complex\u0026lt;long double\u0026gt; coordinate) { const auto max_iteration = 20000ul; auto x = 0.0L; auto y = 0.0L; auto x_squared = 0.0L; auto y_squared = 0.0L; auto iteration = 0u; while (std::islessequal((x_squared + y_squared), 4) \u0026amp;\u0026amp; (iteration \u0026lt; max_iteration)) { y = fma(2 * x, y, coordinate.imag()); x = x_squared - y_squared + coordinate.real(); x_squared = x * x; y_squared = y * y; iteration++; } return Color(iteration); }; canvas.construct(mandelbrot); This can then be parallelized using OpenMP with a range-based for-loop.\nauto construct(auto op) -\u0026gt; void { #pragma omp parallel for for (size_t idx = 0; idx \u0026lt; width * height; idx++) pixels[idx] = op(coordinate(idx)); } One final fix that\u0026rsquo;s pending is being able to do histogram coloring. This can (probably) be easily implemented by just changing the return Color(iteration) part at the end of that lambda. But I haven\u0026rsquo;t found a convenient way of doing that yet. Furthermore, it would be good to support different scaled images. The rendered image for this implementation breaks if width != height.\nLinks: mandelbrot gamma implementation ","date":"2022-03-06T00:00:00Z","image":"http://localhost:1313/cache-invalidation/posts/mandelbrot-revamp/cover_hu24b12ea9a4c47a4aab91895b97b043be_1932610_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/cache-invalidation/posts/mandelbrot-revamp/","title":"Mandelbrot Parallelized"},{"content":"","date":"2023-01-01T00:00:00-04:00","permalink":"http://localhost:1313/cache-invalidation/posts/template/","title":"Big Bold Title"}]